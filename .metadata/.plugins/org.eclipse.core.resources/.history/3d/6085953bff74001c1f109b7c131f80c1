package com.microservice.currencyconversionservice;

import java.math.BigDecimal;

import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.microservice.currencyconversionservice.entity.CurrencyConversion;

import io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker;

//@FeignClient(name="currency-exchange", url="localhost:8000")
@FeignClient(name="currency-exchange")
public interface CurrencyExchangeProxy {
	
	static final String CURRENCY_EXCHANGE = "currency-exchange";
	
	@GetMapping("/currency-exchange/from/{from}/to/{to}")
	@CircuitBreaker(name=CURRENCY_EXCHANGE, fallbackMethod = "currencyExchangeFallback")
	public CurrencyConversion retrieveExchangeValue(
			@PathVariable("from") String from,
			@PathVariable("to") String to);
	
	public default CurrencyConversion currencyExchangeFallback(String from, String to, BigDecimal quantity,Exception e){
		System.out.println("Fallback");
		CurrencyConversion conversion=null;
		return conversion;
	}

}
